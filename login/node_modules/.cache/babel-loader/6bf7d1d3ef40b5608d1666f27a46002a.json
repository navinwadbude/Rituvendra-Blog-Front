{"ast":null,"code":"var _jsxFileName = \"/home/dell/Desktop/thoghtwin/Rituvendra-Blog-Front/login/src/Components/login/LoginBody.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport react from 'react';\nimport img2 from \"../../images/bodypic.jpg\";\nimport { Link } from 'react-router-dom';\nimport { SubmitCheck, isEmailValidation, isPasswordValidation } from '../../utils/utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function LoginBody() {\n  _s();\n\n  const [email, setemail] = useState({\n    value: \"\",\n    emailerror: \"\"\n  });\n  const [password, setpassword] = useState({\n    value: \"\",\n    passerror: \"\"\n  });\n  const [error, seterror] = useState({\n    email: \"\",\n    password: \"\"\n  }); // let itememail = e.target.value\n  // let pattern = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  // if (!(pattern.test(itememail))) {\n  //   setusererror(true)\n  // } else {\n  //   setusererror(false)\n  // }\n  // let itempassword = e.target.value\n  // let regexpass = /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/;\n  // if (!(regexpass.test(itempassword))) {\n  //   setpassword(true)\n  // } else {\n  //   setpassword(false)\n  // }\n\n  const validateform = e => {\n    e.preventDefault(); // let email=document.getElementById('InputEmail').value\n    // if(!pattern.test(email)){\n    //   document.getElementById(\"emailerror\").innerHTML=\" * please enter valid email\"\n    // }\n    // let password=document.getElementById(\"InputPassword\").value\n    // let regexpass = /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/;\n    // if(!regexpass.test(password)){\n    //   document.getElementById(\"passerror\").innerHTML=\"* Minimum eight characters, at least one letter and one number\"\n    // } \n  };\n\n  const handleEmail = event => {\n    setemail({\n      value: event.target.value,\n      emailerror: isEmailValidation(event.target.value) ? \"invalid email\" : \"\"\n    });\n  };\n\n  const handlePassword = event => {\n    setpassword({\n      value: event.target.value,\n      passerror: isPasswordValidation(event.target.value) ? \"password must greter than 6\" : \"\"\n    });\n  }; // else{\n  //   document.getElementById(\"passerror\").innerHTML=\"\"}\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: img2,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"container\",\n        onSubmit: validateform,\n        name: \"myForm\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3 \",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"InputEmail\",\n            className: \"form-label\",\n            children: \"Email address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"email\",\n            onChange: event => handleEmail(event),\n            value: email.value,\n            className: \"form-control\",\n            id: \"InputEmail\",\n            \"aria-describedby\": \"emailHelp\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), error && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"emailerror\",\n            children: \"invalid email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 187\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            id: \"emailerror\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"emailHelp\",\n            className: \"form-text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"InputPassword\",\n            className: \"form-label\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"password\",\n            className: \"form-control\",\n            value: password.value,\n            id: \"InputPassword\",\n            onChange: event => handlePassword(event)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), password && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"passerror\",\n            children: \"Minimum eight characters, at least one letter and one number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 26\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            id: \"passerror\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), error || password ? /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          disabled: true,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 32\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 109\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(LoginBody, \"gTAmxWax0uOVYvjtQbRfNxiOl14=\");\n\n_c = LoginBody;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginBody\");","map":{"version":3,"names":["useState","react","img2","Link","SubmitCheck","isEmailValidation","isPasswordValidation","LoginBody","email","setemail","value","emailerror","password","setpassword","passerror","error","seterror","validateform","e","preventDefault","handleEmail","event","target","handlePassword"],"sources":["/home/dell/Desktop/thoghtwin/Rituvendra-Blog-Front/login/src/Components/login/LoginBody.js"],"sourcesContent":["import {useState } from 'react'\nimport react  from 'react'\n\nimport img2 from \"../../images/bodypic.jpg\"\nimport { Link } from 'react-router-dom'\n\nimport {SubmitCheck,\n  isEmailValidation,\n  isPasswordValidation,} from '../../utils/utils'\n\nexport default function LoginBody() {\n  const [email,setemail]=useState({\n    value:\"\",\n    emailerror:\"\"\n  })\n  \n  const [password, setpassword] = useState({\n    value:\"\",\n    passerror:\"\"\n  })\n  const [error, seterror] = useState({\n    email:\"\",\n    password:\"\"\n  })\n\n\n\n\n\n    // let itememail = e.target.value\n    // let pattern = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    // if (!(pattern.test(itememail))) {\n      //   setusererror(true)\n      // } else {\n        //   setusererror(false)\n        // }\n        \n        \n        \n        // let itempassword = e.target.value\n        // let regexpass = /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/;\n        // if (!(regexpass.test(itempassword))) {\n          //   setpassword(true)\n          // } else {\n            //   setpassword(false)\n            // }\n            \n            \n            \n\n          \n          const validateform = (e) => {\n            e.preventDefault()\n            // let email=document.getElementById('InputEmail').value\n            \n            // if(!pattern.test(email)){\n              //   document.getElementById(\"emailerror\").innerHTML=\" * please enter valid email\"\n              // }\n              \n              \n              \n              // let password=document.getElementById(\"InputPassword\").value\n              // let regexpass = /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/;\n              // if(!regexpass.test(password)){\n                //   document.getElementById(\"passerror\").innerHTML=\"* Minimum eight characters, at least one letter and one number\"\n                // } \n          }\n                const  handleEmail = (event) => {\n                  setemail({\n                    value: event.target.value,\n                    emailerror: isEmailValidation(event.target.value) ? \"invalid email\" : \"\",\n                  });\n                };\n                const handlePassword = (event) => {\n                  setpassword({\n                    value: event.target.value,\n                    passerror: isPasswordValidation(event.target.value,)\n                      ? \"password must greter than 6\"\n                      : \"\",\n                  }); \n                };\n              \n    // else{\n      //   document.getElementById(\"passerror\").innerHTML=\"\"}\n  return (\n    <>\n      <ul>\n        <li>\n          <Link to={\"/\"}>Register</Link>\n\n        </li>\n        <li>\n          <Link to={\"/login\"}>Login</Link>\n\n        </li>\n      </ul>\n      <div className='container' >\n        <img src={img2} alt=\"\" />\n        <form className='container' onSubmit={validateform} name=\"myForm\">\n          <div className=\"mb-3 \">\n            <label for=\"InputEmail\" className=\"form-label\">Email address</label>\n            <input type=\"email\" name='email' onChange={(event)=>handleEmail(event)} value={email.value} className=\"form-control\" id=\"InputEmail\" aria-describedby=\"emailHelp\" />{error && <span className='emailerror'>invalid email</span>}\n\n\n            <span id='emailerror'></span>\n            <div id=\"emailHelp\" className=\"form-text\"></div>\n          </div>\n          <div className=\"mb-3\">\n            <label for=\"InputPassword\" className=\"form-label\">Password</label>\n            <input type=\"text\" name='password' className=\"form-control\" value={password.value} id=\"InputPassword\"  onChange={(event)=>handlePassword(event)}/>\n            {password && <span className='passerror'>Minimum eight characters, at least one letter and one number</span>}\n            <span id='passerror'></span>\n          </div>\n          {error || password ? <button type=\"submit\" className=\"btn btn-primary\" disabled>Submit</button> : <button type=\"submit\" className=\"btn btn-primary\"  >Submit</button>}\n        </form>\n      </div>\n\n    </>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}